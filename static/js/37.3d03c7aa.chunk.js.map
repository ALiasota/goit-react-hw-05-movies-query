{"version":3,"file":"static/js/37.3d03c7aa.chunk.js","mappings":"sOAKe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAaI,IAAI,SACjCD,IACFE,EAAAA,EAAAA,IAAYF,GAAaG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAASS,SAgB5D,OACE,iCACE,kBACEC,MAAO,CAAEC,OAAQ,IACjBC,UAAU,cACVC,SAlBe,SAAAC,GACnBA,EAAEC,iBACF,IAAMV,EAAcR,EAAMmB,OACN,KAAhBX,GAIJF,EAAgB,CAAEN,MAAOQ,KACzBE,EAAAA,EAAAA,IAAYF,GAAaG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAASS,OAJtDQ,MAAM,UAWN,WAKE,kBACEC,KAAK,OACLC,KAAK,OACLC,KAAK,KACLC,aAAa,MACbC,SAfa,SAAAR,GACnBhB,EAASgB,EAAES,cAAcC,WAgBrB,mBAAQd,MAAO,CAAEC,OAAQ,GAAIc,OAAQ,WAAaP,KAAK,SAAvD,uBAIDnB,IACC,wBACGA,EAAM2B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAb,SAAoBC,KADbD,a,0MC/CrBG,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAS,CACbC,QAASH,GAFN,kBAKoBD,GAAAA,CAAM,qBAAsB,CAAEG,OAAAA,IALlD,cAKGE,EALH,yBAMIA,EAASC,MANb,gCAQHC,QAAQC,MAAR,MARG,gFAYA,SAAe/B,IAAtB,4CAAO,OAAP,oBAAO,2GAA2BF,EAA3B,+BAAyC,GACxC4B,EAAS,CACbC,QAASH,EACTlC,MAAOQ,GAHJ,kBAMoByB,GAAAA,CAAM,eAAgB,CAAEG,OAAAA,IAN5C,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG,iFAaA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAAyBZ,EAAzB,+BAA8B,GAC7BM,EAAS,CACbC,QAASH,GAFN,kBAKoBD,GAAAA,CAAM,SAAD,OAAUH,GAAM,CAAEM,OAAAA,IAL3C,cAKGE,EALH,yBAMIA,EAASC,MANb,gCAQHC,QAAQC,MAAR,MARG,iFAYA,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,2GAA4Bb,EAA5B,+BAAiC,GAChCM,EAAS,CACbC,QAASH,GAFN,kBAKoBD,GAAAA,CAAM,SAAD,OAAUH,EAAV,YAAwB,CAAEM,OAAAA,IALnD,cAKGE,EALH,yBAMIA,EAASC,MANb,gCAQHC,QAAQC,MAAR,MARG,iFAYA,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,2GAA4Bd,EAA5B,+BAAiC,GAChCM,EAAS,CACbC,QAASH,GAFN,kBAKoBD,GAAAA,CAAM,SAAD,OAAUH,EAAV,YAAwB,CAAEM,OAAAA,IALnD,cAKGE,EALH,yBAMIA,EAASC,MANb,gCAQHC,QAAQC,MAAR,MARG","sources":["components/MoviesPage/MoviesPage.js","services/films-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n// import { useQuery } from 'react-query';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { searchMovie } from '../../services/films-api';\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (searchQuery) {\n      searchMovie(searchQuery).then(({ results }) => setFilms(results));\n    }\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = query.trim();\n    if (searchQuery === '') {\n      alert('Empty');\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n    searchMovie(searchQuery).then(({ results }) => setFilms(results));\n  };\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n  return (\n    <>\n      <form\n        style={{ margin: 20 }}\n        className=\"search-form\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"find\"\n          size=\"20\"\n          autoComplete=\"off\"\n          onChange={handleChange}\n        ></input>\n        <button style={{ margin: 10, cursor: 'pointer' }} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {films && (\n        <ul>\n          {films.map(({ id, original_title }) => (\n            <li key={id}>\n              <Link to={`${id}`}>{original_title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '067f291d21ed1c6d30bd9ade17d843cc';\n\nexport async function trendMovies() {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios('trending/movie/day', { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function searchMovie(searchQuery = '') {\n  const params = {\n    api_key: KEY,\n    query: searchQuery,\n  };\n  try {\n    const response = await axios('search/movie', { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function movieById(id = '') {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios(`movie/${id}`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function movieCredits(id = '') {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios(`movie/${id}/credits`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function movieReviews(id = '') {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios(`movie/${id}/reviews`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["MoviesPage","useState","query","setQuery","films","setFilms","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","searchMovie","then","results","style","margin","className","onSubmit","e","preventDefault","trim","alert","type","name","size","autoComplete","onChange","currentTarget","value","cursor","map","id","original_title","to","axios","KEY","trendMovies","params","api_key","response","data","console","error","movieById","movieCredits","movieReviews"],"sourceRoot":""}